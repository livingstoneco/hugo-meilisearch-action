import { Index } from './index';
import MeiliAxiosWrapper from './meili-axios-wrapper';
import * as Types from './types';
declare class Meilisearch extends MeiliAxiosWrapper implements Types.MeiliSearchInterface {
    config: Types.Config;
    constructor(config: Types.Config);
    /**
     * Return an Index instance
     * @memberof Meilisearch
     * @method Index
     */
    getIndex(indexUid: string): Index;
    /**
     * List all indexes in the database
     * @memberof Meilisearch
     * @method listIndexes
     */
    listIndexes(): Promise<Types.IndexResponse[]>;
    /**
     * Create a new index
     * @memberof Meilisearch
     * @method createIndex
     */
    createIndex(data: Types.IndexRequest): Promise<Index>;
    /**
     * Get private and public key
     * @memberof Meilisearch
     * @method getKey
     */
    getKeys(): Promise<Types.Keys>;
    /**
     * Check if the server is healhty
     * @memberof Meilisearch
     * @method isHealthy
     */
    isHealthy(): Promise<boolean>;
    /**
     * Change the healthyness to healthy
     * @memberof Meilisearch
     * @method setHealthy
     */
    setHealthy(): Promise<void>;
    /**
     * Change the healthyness to unhealthy
     * @memberof Meilisearch
     * @method setUnhealthy
     */
    setUnhealthy(): Promise<void>;
    /**
     * Change the healthyness to unhealthy
     * @memberof Meilisearch
     * @method setUnhealthy
     */
    changeHealthTo(health: boolean): Promise<void>;
    /**
     * Get the stats of all the database
     * @memberof Meilisearch
     * @method stats
     */
    stats(): Promise<Types.Stats>;
    /**
     * Get the version of MeiliSearch
     * @memberof Meilisearch
     * @method version
     */
    version(): Promise<Types.Version>;
    /**
     * Get the server consuption, RAM / CPU / Network
     * @memberof Meilisearch
     * @method sysInfo
     */
    sysInfo(): Promise<Types.SysInfo>;
    /**
     * Get the server consuption, RAM / CPU / Network. All information as human readable
     * @memberof Meilisearch
     * @method prettySysInfo
     */
    prettySysInfo(): Promise<Types.SysInfoPretty>;
}
export default Meilisearch;
//# sourceMappingURL=meilisearch.d.ts.map